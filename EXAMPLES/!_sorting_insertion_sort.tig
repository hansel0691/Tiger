let
	type arrayInt = array of int
	var N := 0
	var values : arrayInt := nil

	function insertion_sort(values: arrayInt) = 
		let
			var temp := 0
			var j := 0
		in
		for i := 1 to N - 1 do (
			temp := values[i];
			j := i - 1;
			while j >= 0 & values[j] > temp do (
				values[j + 1] := values[j];
				j := j - 1
			);
			values[j + 1] := temp
 		)			
		end
	
	function to_num(s:string) : int = (
			let
				var char := ""
				var res := 0
				var s_size := size(s)
				var temp := 0
				var minus := 0
			in
				for i := 0 to s_size - 1 do (
					char := substring(s, 0, 1);
					if char = "-" then 
						minus :=  if minus = 0 then 1 else 0
					else (
						temp := ord(s);
						temp := temp - 48;
						res := res * 10 + temp
					);
					s := substring(s, 1, s_size - 1 - i)
				);
				if minus then -res else res
			end
		)
in
	N := to_num(getline());
	values := arrayInt[N] of 0;
	for i := 0 to N - 1 do
		values[i] := to_num(getline());
	insertion_sort(values);
	printline("Sorted Array: ");
	for i := 0 to N - 1 do(
		printiline(values[i])
	)
end